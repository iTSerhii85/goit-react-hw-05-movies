{"version":3,"file":"static/js/379.c73b07d7.chunk.js","mappings":"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","sources":["components/movieList/MovieList.style.js","components/movieList/MovieList.jsx","fetch.js","components/searchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Card = styled.li`\n  max-width: 200px;\n  height: 330px;\n  padding: 10px;\n  background-color: #aed6f1;\n  border-radius: 5px;\n  box-shadow: 10px 10px 17px 0px rgba(0, 0, 0, 0.75);\n  overflow-wrap: break-word;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n\n  h3 {\n    margin-top: 10px;\n    margin-bottom: 0;\n    color: black;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Card, Ul } from './MovieList.style';\nimport image from 'img/no-image.jpg';\n\nexport const MovieList = ({ movies, url }) => {\n  const location = useLocation();\n\n  return (\n    <Ul>\n      {movies.map(movie => (\n        <Link\n          to={`${url}${movie.id}`}\n          key={movie.id}\n          state={{ from: location }}\n        >\n          <Card>\n            <div>\n              {movie.poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt=\"movie.title\"\n                  width={180}\n                  height={250}\n                />\n              ) : (\n                <img src={image} alt={movie.title} width={180} height={250} />\n              )}\n              <div>\n                <h3>{movie.title}</h3>\n              </div>\n            </div>\n          </Card>\n        </Link>\n      ))}\n    </Ul>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '7c6a11c2d8e8524ccfd41d8aedf2bd73';\n\nasync function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovies(value) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviewsBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {\n  getTrendingMovies,\n  getMovies,\n  getMovieBiId,\n  getCastBiId,\n  getReviewsBiId,\n};\n","import { useState } from 'react';\n\nexport const SearchForm = ({ onSubmit, placeholder }) => {\n  const [searchInputValue, setSearchInputValue] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(searchInputValue);\n    setSearchInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder={placeholder === '' ? 'Enter movie name' : placeholder}\n        value={searchInputValue}\n        onChange={e => setSearchInputValue(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { MovieList } from 'components/movieList/MovieList';\nimport { SearchForm } from 'components/searchForm/SearchForm';\nimport { getMovies } from 'fetch';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [inputValue, setInputValue] = useSearchParams('');\n  const searchValue = inputValue.get('query') ?? '';\n  const [searchMovies, setSearchMovies] = useState('');\n\n  const updateQueryString = evt => {\n    const nextParams = evt !== '' ? { query: evt } : {};\n    setInputValue(nextParams);\n  };\n\n  useEffect(() => {\n    if (searchValue.trim() === '') {\n      // toast.info('enter something!!!')\n      return;\n    }\n    getMovies(searchValue.trim()).then(data => setSearchMovies(data));\n\n    return function cleanUp() {\n      getMovies(searchValue.trim());\n    };\n  }, [searchValue]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={updateQueryString} placeholder={searchValue} />\n      {searchMovies !== '' && <MovieList movies={searchMovies} url={''} />}\n    </main>\n  );\n};\nexport default MoviesPage;\n"],"names":["Ul","styled","Card","MovieList","movies","url","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","width","height","image","title","BASE_URL","KEY","getTrendingMovies","axios","response","data","results","console","error","getMovies","value","getMovieBiId","getCastBiId","getReviewsBiId","SearchForm","onSubmit","placeholder","useState","searchInputValue","setSearchInputValue","evt","preventDefault","type","autoComplete","autoFocus","onChange","e","target","useSearchParams","inputValue","setInputValue","searchValue","get","searchMovies","setSearchMovies","useEffect","trim","then","query"],"sourceRoot":""}