{"version":3,"file":"static/js/21.9b48e279.chunk.js","mappings":"8PAEMA,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHhD,cAEUG,EAFV,yBAKWA,EAASC,KAAKC,SALzB,gCAOIC,QAAQC,MAAR,MAPJ,yFAWeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gGAE2BP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC0CS,EAD1C,gCAF3B,cAEUN,EAFV,yBAKWA,EAASC,KAAKC,SALzB,gCAOIC,QAAQC,MAAR,MAPJ,yFAWeG,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,gGAE2BT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDY,EADC,oBACaX,EADb,oBAF3B,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIE,QAAQC,MAAR,MAPJ,gF,0FCzBaK,E,OAAUC,GAAAA,IAAH,0E,SCAPC,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3B,OACE,+BACE,UAACH,EAAD,YACE,gBACEI,IAAG,yCAAoCD,EAAME,aAC7CC,IAAKH,EAAMI,MACXC,MAAO,IACPC,OAAQ,OAEV,4BACE,0BACGN,EAAMI,MADT,KACgB,gCAAQJ,EAAMO,aAAd,OAAoC,QAEpD,wCAAgBC,KAAKC,MAA2B,GAArBT,EAAMU,cAAjC,QACA,sCACA,uBAAIV,EAAMW,YACV,oCACA,uBAAIX,EAAMY,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAKxD,E,mCCKD,EAxBqB,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WAGR,OAFA1B,EAAAA,EAAAA,IAAawB,GAASG,MAAK,SAAAjC,GAAI,OAAI6B,EAAS7B,EAAb,IAExB,YACLM,EAAAA,EAAAA,IAAawB,EACd,CACF,GAAE,CAACA,KAGF,gCACGnB,IAAS,SAACD,EAAD,CAAYC,MAAOA,KAC7B,SAAC,KAAD,CAAMuB,GAAG,OAAT,mBACA,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,EAAAC,SAAD,WACE,SAAC,KAAD,QAIP,C","sources":["fetch.js","components/aboutMovie/AboutMovie.style.js","components/aboutMovie/AboutMovie.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '7c6a11c2d8e8524ccfd41d8aedf2bd73';\n\nasync function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovies(value) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport { getTrendingMovies, getMovies, getMovieBiId };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  padding: 15px;\n`;\n","import { Wrapper } from './AboutMovie.style';\n\nexport const AboutMovie = ({ movie }) => {\n  return (\n    <>\n      <Wrapper>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n          width={300}\n          height={350}\n        />\n        <div>\n          <h1>\n            {movie.title} <span>({movie.release_date})</span>{' '}\n          </h1>\n          <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n","import { AboutMovie } from 'components/aboutMovie/AboutMovie';\nimport { getMovieBiId } from 'fetch';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieBiId(movieId).then(data => setMovie(data));\n\n    return function cleanup() {\n      getMovieBiId(movieId);\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <AboutMovie movie={movie} />}\n      <Link to=\"cast\">Cast</Link>\n      <br />\n      <Link to=\"reviews\">Reviews</Link>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","response","data","results","console","error","getMovies","value","getMovieBiId","id","Wrapper","styled","AboutMovie","movie","src","poster_path","alt","title","width","height","release_date","Math","round","vote_average","overview","genres","map","genre","name","join","useState","setMovie","movieId","useParams","useEffect","then","to","Suspense"],"sourceRoot":""}