{"version":3,"file":"static/js/116.7b4b4f21.chunk.js","mappings":"iPAEaA,EAAKC,EAAAA,GAAAA,GAAH,gIAQFC,EAAOD,EAAAA,GAAAA,GAAH,8V,kBCkCjB,EApCa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WAGR,OAFAC,EAAAA,EAAAA,IAAYH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKP,KAAjB,IAEvB,YACLK,EAAAA,EAAAA,IAAYH,EACb,CACF,GAAE,CAACA,IAES,KAATF,EACF,OACE,+BACE,SAACJ,EAAD,UACGI,EAAKQ,KAAI,SAAAC,GAAK,OACb,UAACX,EAAD,WACGW,EAAMC,cACL,gBACEC,IAAG,UAtBL,mCAsBK,OAAeF,EAAMC,cACxBE,IAAKH,EAAMI,KACXC,MAAO,IACPC,OAAQ,OAGV,gBAAKJ,IAAKK,EAAOJ,IAAKH,EAAMI,KAAMC,MAAO,IAAKC,OAAQ,OAExD,wBAAKN,EAAMI,SAXFJ,EAAMQ,GADJ,OAmBxB,C,+LCzCKC,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHhD,cAEUG,EAFV,yBAKWA,EAASf,KAAKgB,SALzB,gCAOIC,QAAQC,MAAR,MAPJ,yFAWeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gGAE2BN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC0CQ,EAD1C,gCAF3B,cAEUL,EAFV,yBAKWA,EAASf,KAAKgB,SALzB,gCAOIC,QAAQC,MAAR,MAPJ,yFAWeG,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BX,GAA5B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,oBACaE,EADb,oBAF3B,cAEUG,EAFV,yBAKWA,EAASf,MALpB,gCAOIiB,QAAQC,MAAR,MAPJ,yFAWepB,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BY,GAA3B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBAF3B,cAEUG,EAFV,yBAKWA,EAASf,MALpB,gCAOIiB,QAAQC,MAAR,MAPJ,yFAWeI,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BZ,GAA9B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBAF3B,cAEUG,EAFV,yBAKWA,EAASf,MALpB,gCAOIiB,QAAQC,MAAR,MAPJ,gF","sources":["components/cast/Cast.style.js","components/cast/Cast.jsx","fetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Card = styled.li`\n  max-width: 200px;\n  height: 330px;\n  padding: 10px;\n  background-color: #aed6f1;\n  border-radius: 5px;\n  box-shadow: 10px 10px 17px 0px rgba(0, 0, 0, 0.75);\n\n  h3 {\n    margin-top: 10px;\n    margin-bottom: 0;\n    color: black;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n","import { getCastBiId } from 'fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, Ul } from './Cast.style';\nimport image from 'img/no-image.jpg';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastBiId(movieId).then(data => setCast(data.cast));\n\n    return function cleanup() {\n      getCastBiId(movieId);\n    };\n  }, [movieId]);\n\n  if (cast !== '') {\n    return (\n      <>\n        <Ul>\n          {cast.map(actor => (\n            <Card key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`${IMG_URL}${actor.profile_path}`}\n                  alt={actor.name}\n                  width={180}\n                  height={250}\n                />\n              ) : (\n                <img src={image} alt={actor.name} width={180} height={250} />\n              )}\n              <h4>{actor.name}</h4>\n            </Card>\n          ))}\n        </Ul>\n      </>\n    );\n  }\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '7c6a11c2d8e8524ccfd41d8aedf2bd73';\n\nasync function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovies(value) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviewsBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {\n  getTrendingMovies,\n  getMovies,\n  getMovieBiId,\n  getCastBiId,\n  getReviewsBiId,\n};\n"],"names":["Ul","styled","Card","useState","cast","setCast","movieId","useParams","useEffect","getCastBiId","then","data","map","actor","profile_path","src","alt","name","width","height","image","id","BASE_URL","KEY","getTrendingMovies","axios","response","results","console","error","getMovies","value","getMovieBiId","getReviewsBiId"],"sourceRoot":""}