{"version":3,"file":"static/js/354.5110d3ce.chunk.js","mappings":"uPAEaA,EAAKC,EAAAA,GAAAA,GAAH,uJAOFC,EAAKD,EAAAA,GAAAA,GAAH,yJ,SCyBf,EA7BgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WAGR,OAFAC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,EAAKC,QAApB,IAE1B,YACLH,EAAAA,EAAAA,IAAeH,EAChB,CACF,GAAE,CAACA,KAGF,8BACsB,IAAnBF,EAAQS,QACP,uEAEA,SAACX,EAAD,UACGE,EAAQU,KAAI,SAAAC,GAAM,OACjB,UAACf,EAAD,YACE,qCAAae,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAU5B,C,mMC/BKC,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHhD,cAEUG,EAFV,yBAKWA,EAASZ,KAAKC,SALzB,gCAOIY,QAAQC,MAAR,MAPJ,yFAWeC,EAAU,EAAVA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAOC,GAAhC,gGAE2BN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DU,OAAQ,CACNC,QAAQ,GAAD,OAAKV,GACZW,MAAM,GAAD,OAAKJ,GACVK,KAAK,GAAD,OAAKJ,MANjB,cAEUL,EAFV,yBASWA,EAASZ,MATpB,gCAWIa,QAAQC,MAAR,MAXJ,yFAeeQ,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4Bf,GAA5B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,oBACaE,EADb,oBAF3B,cAEUG,EAFV,yBAKWA,EAASZ,MALpB,gCAOIa,QAAQC,MAAR,MAPJ,yFAWeS,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BhB,GAA3B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBAF3B,cAEUG,EAFV,yBAKWA,EAASZ,MALpB,gCAOIa,QAAQC,MAAR,MAPJ,yFAWehB,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BS,GAA9B,gGAE2BI,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDD,EADC,4BACqBE,EADrB,oBAF3B,cAEUG,EAFV,yBAKWA,EAASZ,MALpB,gCAOIa,QAAQC,MAAR,MAPJ,gF","sources":["components/reviews/Reviews.style.js","components/reviews/Reviews.jsx","services/fetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\n  padding: 15px;\n  border-radius: 16px;\n  box-shadow: 10px 10px 17px 0px rgba(0, 0, 0, 0.75);\n  background-color: #82d1e2;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n`;\n","import { getReviewsBiId } from 'services/fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Li, Ul } from './Reviews.style';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewsBiId(movieId).then(data => setReviews(data.results));\n\n    return function cleanup() {\n      getReviewsBiId(movieId);\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <h3>We don't have any reviews for this movie!</h3>\n      ) : (\n        <Ul>\n          {reviews.map(review => (\n            <Li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </Li>\n          ))}\n        </Ul>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '7c6a11c2d8e8524ccfd41d8aedf2bd73';\n\nasync function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovies(value, p) {\n  try {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        api_key: `${KEY}`,\n        query: `${value}`,\n        page: `${p}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCastBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getReviewsBiId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {\n  getTrendingMovies,\n  getMovies,\n  getMovieBiId,\n  getCastBiId,\n  getReviewsBiId,\n};\n"],"names":["Li","styled","Ul","useState","reviews","setReviews","movieId","useParams","useEffect","getReviewsBiId","then","data","results","length","map","review","author","content","id","BASE_URL","KEY","getTrendingMovies","axios","response","console","error","getMovies","value","p","params","api_key","query","page","getMovieBiId","getCastBiId"],"sourceRoot":""}